#====================#
# use S3 plot method
plot(Conc1, Conc2, grid = Distance/1000, which = "OC",
mfrow = c(2, 1), lwd = 2, xlab = "distance [km]",
main = "Organic carbon decay in the estuary",
ylab = "OC Concentration [mM]")
plot(Conc1, Conc2, grid = Int.Distance/1000, which = "Flow",
mfrow = NULL, lwd = 2, xlab = "distance [km]",
main = "Longitudinal change in the water flow rate",
ylab = "Flow rate [m3 s-1]")
?tran.1D
example(trand.1D)
example(tran.1D)
BOD <- state[1:N]
O2  <- state[(N+1):(2*N)]
# BOD dynamics
FluxBOD <-  v * c(BOD_0, BOD)  # fluxes due to water transport
FluxO2  <-  v * c(O2_0, O2)
BODrate <- r*BOD*O2/(O2+10)  # 1-st order consumption, Monod in oxygen
#rate of change = flux gradient - consumption  + reaeration (O2)
dBOD         <- -diff(FluxBOD)/dx  - BODrate
dO2          <- -diff(FluxO2)/dx   - BODrate + p*(O2sat-O2)
return(list(c(dBOD = dBOD, dO2 = dO2), BODrate = BODrate))
}    # END O2BOD
O2.model <- function (t = 0, x, pars = NULL) {
tran <- tran.1D(C = 1/2*x^2, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- -x
return(list(dCdt = tran + reac))
}
?ode.1D
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = 1/2*x^2, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- -x
return(list(dCdt = tran + reac))
}
ode.1D(c(10), t =c(0,5),O2.model
)
ode.1D(c(10), t =c(0,5),O2.model,nspec = 1)
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = 1/2*x^2, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = 1/2*x^2, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
# Parameter values
C.ow.O2 <- 5  # concentration O2 in overlying water [micromol cm-3]
por     <- 1/10   # porosity
v       <- 1     # advective velocity [cm yr-1]
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 30  # depth of sediment domain [cm]
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D.grid   <- setup.prop.1D(value = D, grid = grid)
v.grid   <- setup.prop.1D(value = v, grid = grid)
yini <- rep(0, length.out = N)
O2   <- ode.1D(y = yini,time = 0, func = O2.model, nspec = 1)
O2   <- ode.1D(y = yini,time = c(0,10), func = O2.model, nspec = 1)
O2
plot(,O2)
plot(O2)
O2
O2   <- ode.1D(y = yini,time = c(0:5), func = O2.model, nspec = 1)
O2
plot(c(1:5),O2)
plot(c(1:5),O2(,5))
plot(c(1:5),O2[,5])
O2[,5]
plot(c(0:5),O2[,5])
plot(c(0:5),O2[,5])
plot(seq(0,10,0.1),O2[1,])
plot(seq(0,10,0.1),O2[2,])
plot(seq(0,10,0.1),O2[3,])
plot(seq(0,10,0.1),O2[4,])
plot(seq(0,10,0.1),O2[5,])
# Parameter values
C.ow.O2 <- 0  # concentration O2 in overlying water [micromol cm-3]
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
por     <- 1/10   # porosity
v       <- 1     # advective velocity [cm yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D.grid   <- setup.prop.1D(value = D, grid = grid)
v.grid   <- setup.prop.1D(value = v, grid = grid)
yini <- rep(0, length.out = N)
O2   <- ode.1D(y = yini,time = c(0:5), func = O2.model, nspec = 1)
plot(seq(0,10,0.1),O2[1,])
plot(seq(0,10,0.1),O2[2,])
plot(seq(0,10,0.1),O2[3,])
plot(seq(0,10,0.1),O2[4,])
plot(seq(0,10,0.1),O2[5,])
plot(seq(0,10,0.1),O2[5,])O2
O2
plot(seq(0,10,0.1),O2[5,1:100])
plot(seq(0,10,0.1),O2[5,1:101])
plot(seq(0,10,0.1),O2[5,2:101])
plot(seq(0.1,10,0.1),O2[5,2:101])
# Parameter values
C.ow.O2 <- 1  # concentration O2 in overlying water [micromol cm-3]
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
por     <- 1/10   # porosity
v       <- 1     # advective velocity [cm yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D.grid   <- setup.prop.1D(value = D, grid = grid)
v.grid   <- setup.prop.1D(value = v, grid = grid)
yini <- rep(0, length.out = N)
O2   <- ode.1D(y = yini,time = c(0:5), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[5,2:101])
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[3,2:101])
plot(seq(0.1,10,0.1),O2[4,2:101])
plot(seq(0.1,10,0.1),O2[5,2:101])
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = 1/2*x, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
# Parameter values
C.ow.O2 <- 1  # concentration O2 in overlying water [micromol cm-3]
v       <- 1     # advective velocity [cm yr-1]
por     <- 1/10   # porosity
Ks      <- 1 # O2 consumption saturation constant
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
L <- 10  # depth of sediment domain [cm]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D.grid   <- setup.prop.1D(value = D, grid = grid)
por.grid <- setup.prop.1D(value = por, grid = grid)
v.grid   <- setup.prop.1D(value = v, grid = grid)
yini <- rep(0, length.out = N)
plot(seq(0.1,10,0.1),O2[5,2:101])
O2   <- ode.1D(y = yini,time = c(0:5), func = O2.model, nspec = 1)
plot(O2, grid = grid$x.mid,xyswap = TRUE, main = "O2 concentration",
ylab = "depth [cm]", xlab = "", mfrow = c(1,2), type = "p", pch = 16)
plot(seq(0.1,10,0.1),O2[5,2:101])
plot(O2, grid = grid$x.mid,xyswap = TRUE, main = "O2 concentration",
ylab = "depth [cm]", xlab = "", mfrow = c(1,2), type = "p", pch = 16)
O2   <- ode.1D(y = yini,time = c(0:5), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[5,2:101])
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[3,2:101])
plot(seq(0.1,10,0.1),O2[4,2:101])
plot(seq(0.1,10,0.1),O2[5,2:101])
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[30,2:101])
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = x, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
# Parameter values
C.ow.O2 <- 1  # concentration O2 in overlying water [micromol cm-3]
por     <- 1/10   # porosity
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = x, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
por     <- 1/10   # porosity
# Parameter values
C.ow.O2 <- 1  # concentration O2 in overlying water [micromol cm-3]
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
v       <- 1     # advective velocity [cm yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D.grid   <- setup.prop.1D(value = D, grid = grid)
v.grid   <- setup.prop.1D(value = v, grid = grid)
yini <- rep(0, length.out = N)
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[30,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[3,2:101])
?setup.prop.1D
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D.grid   <- setup.prop.1D(value = x, grid = grid)
D_fun <- function(x)
D_fun <- function(x){
return x
}
D_fun <- function(x){
return (x)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v.grid   <- setup.prop.1D(value = v, grid = grid)
yini <- rep(0, length.out = N)
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[3,2:101])
plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[30,2:101])
v_fun <- function(x){
return (1/x)
}
v.grid   <- setup.prop.1D(func = v_fun(x), grid = grid)
D_fun <- function(x){
return (1)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (1/x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
v_fun <- function(x){
return (x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[30,2:101])
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[30,2:101])
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[10,2:101])
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[10,2:101])
yini[90] <- 10
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[3,2:101])
plot(seq(0.1,10,0.1),O2[4,2:101])
plot(seq(0.1,10,0.1),O2[6,2:101])
plot(seq(0.1,10,0.1),O2[10,2:101])
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = x, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
# Parameter values
C.ow.O2 <- 1  # concentration O2 in overlying water [micromol cm-3]
# Parameter values
C.ow.O2 <- 0  # concentration O2 in overlying water [micromol cm-3]
por     <- 1/10   # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
v       <- 1     # advective velocity [cm yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
O2   <- ode.1D(y = yini,time = seq(0,5,0.1)), func = O2.model, nspec = 1)
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[3,2:101])
plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[20,2:101])
plot(seq(0.1,10,0.1),O2[30,2:101])
por     <- 0   # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
v       <- 1     # advective velocity [cm yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
D_fun <- function(x){
return (0)
}
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[30,2:101])
plot(seq(0.1,10,0.1),O2[10,2:101])
por     <- 1  # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
v       <- 1     # advective velocity [cm yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[20,2:101])
?tran.1D
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = 0, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
# Parameter values
C.ow.O2 <- 0  # concentration O2 in overlying water [micromol cm-3]
por     <- 1  # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
v       <- 1     # advective velocity [cm yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
warnings()
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = x, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
# Parameter values
C.ow.O2 <- 0  # concentration O2 in overlying water [micromol cm-3]
por     <- 1  # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
v       <- 1     # advective velocity [cm yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[20,2:101])
View(Ana.spher)
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = 1, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
por     <- 1  # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
# Parameter values
C.ow.O2 <- 0  # concentration O2 in overlying water [micromol cm-3]
v       <- 1     # advective velocity [cm yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[20,2:101])
plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[30,2:101])
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = x, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
?setup.prop.1D
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = x, C.up = C.ow.O2, D = 0,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
# Parameter values
C.ow.O2 <- 0  # concentration O2 in overlying water [micromol cm-3]
por     <- 1  # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
v       <- 1     # advective velocity [cm yr-1]
Ks      <- 1 # O2 consumption saturation constant
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
por.grid <- setup.prop.1D(value = por, grid = grid)
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[30,2:101])
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[3,2:101])
plot(seq(0.1,10,0.1),O2[4,2:101])
O2   <- ode.1D(y = yini,time = seq(0,5,0.01), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[4,2:101])
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
