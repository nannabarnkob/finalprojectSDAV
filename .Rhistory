plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[30,2:101])
v_fun <- function(x){
return (1/x)
}
v.grid   <- setup.prop.1D(func = v_fun(x), grid = grid)
D_fun <- function(x){
return (1)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (1/x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
v_fun <- function(x){
return (x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[30,2:101])
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[30,2:101])
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[10,2:101])
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[10,2:101])
yini[90] <- 10
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[3,2:101])
plot(seq(0.1,10,0.1),O2[4,2:101])
plot(seq(0.1,10,0.1),O2[6,2:101])
plot(seq(0.1,10,0.1),O2[10,2:101])
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = x, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
# Parameter values
C.ow.O2 <- 1  # concentration O2 in overlying water [micromol cm-3]
# Parameter values
C.ow.O2 <- 0  # concentration O2 in overlying water [micromol cm-3]
por     <- 1/10   # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
v       <- 1     # advective velocity [cm yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = c(0:30), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
O2   <- ode.1D(y = yini,time = seq(0,5,0.1)), func = O2.model, nspec = 1)
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[3,2:101])
plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[20,2:101])
plot(seq(0.1,10,0.1),O2[30,2:101])
por     <- 0   # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
v       <- 1     # advective velocity [cm yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
D_fun <- function(x){
return (0)
}
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[30,2:101])
plot(seq(0.1,10,0.1),O2[10,2:101])
por     <- 1  # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
v       <- 1     # advective velocity [cm yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[20,2:101])
?tran.1D
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = 0, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
# Parameter values
C.ow.O2 <- 0  # concentration O2 in overlying water [micromol cm-3]
por     <- 1  # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
v       <- 1     # advective velocity [cm yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
warnings()
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = x, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
# Parameter values
C.ow.O2 <- 0  # concentration O2 in overlying water [micromol cm-3]
por     <- 1  # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
v       <- 1     # advective velocity [cm yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[20,2:101])
View(Ana.spher)
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = 1, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
por     <- 1  # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
# Parameter values
C.ow.O2 <- 0  # concentration O2 in overlying water [micromol cm-3]
v       <- 1     # advective velocity [cm yr-1]
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
Ks      <- 1 # O2 consumption saturation constant
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
por.grid <- setup.prop.1D(value = por, grid = grid)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[20,2:101])
plot(seq(0.1,10,0.1),O2[10,2:101])
plot(seq(0.1,10,0.1),O2[30,2:101])
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = x, C.up = C.ow.O2, D = D.grid,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
?setup.prop.1D
O2.model <- function (t, x, pars = NULL) {
tran <- tran.1D(C = x, C.up = C.ow.O2, D = 0,
v = v.grid, VF = por.grid, dx = grid)$dC
reac <- 0
return(list(dCdt = tran + reac))
}
# Parameter values
C.ow.O2 <- 0  # concentration O2 in overlying water [micromol cm-3]
por     <- 1  # porosity
D       <- 1  # diffusion coefficient O2 [cm2 yr-1]
v       <- 1     # advective velocity [cm yr-1]
Ks      <- 1 # O2 consumption saturation constant
R.O2    <- 1    # O2 consumption rate [micromol cm-3 yr-1]
L <- 10  # depth of sediment domain [cm]
N <- 100  # number of grid layers
por.grid <- setup.prop.1D(value = por, grid = grid)
grid <- setup.grid.1D(x.up = 0, L = L, N = N)
svf.grid <- setup.prop.1D(value = (1-por), grid = grid)
D_fun <- function(x){
return (0)
}
D.grid   <- setup.prop.1D(func = D_fun, grid = grid)
v_fun <- function(x){
return (-x)
}
v.grid   <- setup.prop.1D(func = v_fun, grid = grid)
yini <- rep(0, length.out = N)
yini[90] <- 10
O2   <- ode.1D(y = yini,time = seq(0,5,0.1), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[30,2:101])
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
plot(seq(0.1,10,0.1),O2[3,2:101])
plot(seq(0.1,10,0.1),O2[4,2:101])
O2   <- ode.1D(y = yini,time = seq(0,5,0.01), func = O2.model, nspec = 1)
plot(seq(0.1,10,0.1),O2[4,2:101])
plot(seq(0.1,10,0.1),O2[1,2:101])
plot(seq(0.1,10,0.1),O2[2,2:101])
setwd("~/finalprojectSDAV-master/finalprojectSDAV")
Full_data <- read.csv("socio_data_kbh.csv")
Sorted_data <- Full_data[,c(3,5,7:21,25:35,63:70)]
?data.frame
View(Full_data)
?aggregate.data.frame
View(Sorted_data)
aggregated.data.frame(Sorted_data[,4])
aggregated(Sorted_data[,4])
aggregate(Sorted_data[,4])
aggregate(Sorted_data[,4],mean)
aggregate(Sorted_data,list(aar = 2008),mean)
Sorted_data$aar
aggregate(Sorted_data$alder_antal_0_5,list(aar),mean)
aggregate(Sorted_data$alder_antal_0_5,list(Region = aar),mean)
aggregate(Sorted_data$alder_antal_0_5,list(Region = Sorted_data$aar),mean)
Full_data <- read.csv("socio_data_kbh.csv")
Full_data[Full_data == NA] <- 0
Full_data[is.na(Full_data)] <- 0
Full_data <- read.csv("socio_data_kbh.csv")
Full_data[is.na(Full_data)] <- 0
Sorted_data <- Full_data[,c(3,5,7:21,25:35,63:70)]
write.csv(Sorted_data, file = "Sorted_data.csv",row.names=TRUE)
aggregate(Sorted_data$alder_antal_0_5,list(Region = Sorted_data$aar),mean)
A <- aggregate(Sorted_data$alder_antal_0_5,list(Region = Sorted_data$aar),mean)
A$x
Aggregated_data <- data.frame(alder_antal_0_5=as.numeric(),
alder_antal_6_17=as.numeric(),
alder_antal_18_29=as.numeric(),
alder_antal_30_39=as.numeric(),
alder_antal_40_49=as.numeric(),
alder_antal_50_64=as.numeric(),
alder_antal_over_65=as.numeric(),
aar = as.numeric(),
stringsAsFactors=FALSE)
View(Aggregated_data)
Aggregated_data$alder_antal_0_5[1] <- 1
Aggregated_data$alder_antal_0_5[1]
Aggregated_data$alder_antal_0_5[2]
Aggregated_data$alder_antal_0_5 <- 1
names(Aggregated_data)
as.String(hej)
as.string(hej)
as.str(hej)
toString(hej)
substitute(hej)
substitute(2)
substitute(2) + 2
desparsesubstitute(2)
desparse(substitute(2))
deparse(substitute(2))
a = []
a = c()
cbind(a,c(2,1))
a <- cbind(a,c(2,1))
a <- cbind(a,c(2,1))
a
A <- c()
for (i in names(Aggregated_data)){
B <- aggregate(Sorted_data$deparse(substitute(i)),list(Region = Sorted_data$aar),mean)
A <- cbind(A,B$deparse(substitute(i)))
}
for (i in names(Aggregated_data)){
print(i)
B <- aggregate(Sorted_data$deparse(substitute(i)),list(Region = Sorted_data$aar),mean)
A <- cbind(A,B$deparse(substitute(i)))
}
for (i in names(Aggregated_data)){
print(i)
B <- aggregate(Sorted_data$i,list(Region = Sorted_data$aar),mean)
A <- cbind(A,B$i)
}
for (i in names(Aggregated_data)){
print(Sorted_data$i)
B <- aggregate(Sorted_data$i,list(Region = Sorted_data$aar),mean)
A <- cbind(A,B$i)
}
for (i in names(Aggregated_data)){
print(Sorted_data[[i]])
B <- aggregate(Sorted_data$i,list(Region = Sorted_data$aar),mean)
A <- cbind(A,B$i)
}
for (i in names(Aggregated_data)){
print(Sorted_data[[i]])
B <- aggregate(Sorted_data[[i]],list(Region = Sorted_data$aar),mean)
A <- cbind(A,B[[i]])
}
A
A <- c()
for (i in names(Aggregated_data)){
B <- aggregate(Sorted_data[[i]],list(Region = Sorted_data$aar),mean)
print(B)
A <- cbind(A,B[[i]])
}
for (i in names(Aggregated_data)){
B <- aggregate(Sorted_data[[i]],list(Region = Sorted_data$aar),mean)
print(B[[i]])
A <- cbind(A,B[[i]])
}
A <- c()
for (i in names(Aggregated_data)){
B <- aggregate(Sorted_data[[i]],list(Region = Sorted_data$aar),mean)
print(B$x)
A <- cbind(A,B[[i]])
}
A <- rep(0,7)
A <- t(rep(0,7))
for (i in names(Aggregated_data)){
B <- aggregate(Sorted_data[[i]],list(Region = Sorted_data$aar),mean)
print(B$x)
A <- cbind(A,B[[i]])
}
A <- t(rep(0,7))
for (i in names(Aggregated_data)){
B <- aggregate(Sorted_data[[i]],list(Region = Sorted_data$aar),mean)
print(B$x)
A <- rbind(A,B[[i]])
}
for (i in names(Aggregated_data)){
B <- aggregate(Sorted_data[[i]],list(Region = Sorted_data$aar),mean)
print(B$x)
A <- rbind(A,B$x)
}
View(A)
A <- t(rep(0,7))
for (i in names(Aggregated_data)){
B <- aggregate(Sorted_data[[i]],list(Region = Sorted_data$aar),mean)
print(B$x)
A <- cbind(A,B$x)
}
A <- c()
for (i in names(Aggregated_data)){
B <- aggregate(Sorted_data[[i]],list(Region = Sorted_data$aar),mean)
print(B$x)
A <- cbind(A,B$x)
}
View(A)
Aggregated_data<- A
Aggregated_data <- data.frame(alder_antal_0_5=as.numeric(),
alder_antal_6_17=as.numeric(),
alder_antal_18_29=as.numeric(),
alder_antal_30_39=as.numeric(),
alder_antal_40_49=as.numeric(),
alder_antal_50_64=as.numeric(),
alder_antal_over_65=as.numeric(),
aar = as.numeric(),
stringsAsFactors=FALSE)
A <- c()
for (i in names(Aggregated_data)){
B <- aggregate(Sorted_data[[i]],list(Region = Sorted_data$aar),mean)
print(B$x)
A <- cbind(A,B$x)
}
Aggregated_data[1]<- A[1,]
Aggregated_data <- data.frame(alder_antal_0_5=rep(0,7),
alder_antal_6_17=rep(0,7),
alder_antal_18_29=rep(0,7),
alder_antal_30_39=rep(0,7),
alder_antal_40_49=rep(0,7),
alder_antal_50_64=rep(0,7),
alder_antal_over_65=rep(0,7),
aar = rep(0,7),
stringsAsFactors=FALSE)
A <- c()
for (i in names(Aggregated_data)){
B <- aggregate(Sorted_data[[i]],list(Region = Sorted_data$aar),mean)
print(B$x)
A <- cbind(A,B$x)
}
Aggregated_data[1]<- A[1,]
View(Aggregated_data)
Aggregated_data[1,]<- A[1,]
Aggregated_data[,]<- A
View(Aggregated_data)
A <- c()
for (i in names(Aggregated_data)){
B <- aggregate(Sorted_data[[i]],list(Region = Sorted_data$aar),sum)
print(B$x)
A <- cbind(A,B$x)
}
Aggregated_data[,]<- A
View(B)
Aggregated_data[,8] <- B$Region
View(Aggregated_data)
write.csv(Aggregated_data, file = "Aggregated_data.csv",row.names=TRUE)
data <- read.table("C:/Users/Thor/Dropbox/DTU/Stokastiske differentialligninger/RealData.csv",sep=",",header = T)
Realdata <- read.table("C:/Users/Thor/Dropbox/DTU/Stokastiske differentialligninger/RealData.csv",sep=",",header = T)
Noisedata <- read.table("C:/Users/Thor/Dropbox/DTU/Stokastiske differentialligninger/NoiseData.csv",sep=",",header = T)
View(Realdata)
plot(times_SimData, NoiseData[2,],col = "blue",type = "l",lwd = 2)
par(mfrow(c(1,2)))
plot(NoiseData[1,], NoiseData[2,],col = "blue",type = "l",lwd = 2)
lines(NoiseData[1,], RealData[2,],col = "red",lwd = 2)
Realdata <- read.table("C:/Users/Thor/Dropbox/DTU/Stokastiske differentialligninger/RealData.csv",sep=",",header = T)
Noisedata <- read.table("C:/Users/Thor/Dropbox/DTU/Stokastiske differentialligninger/NoiseData.csv",sep=",",header = T)
plot(NoiseData[1,], NoiseData[2,],col = "blue",type = "l",lwd = 2)
View(Noisedata)
plot(Noisedata[1,], Noisedata[2,],col = "blue",type = "l",lwd = 2)
Noisedata[2,]
Noisedata[1,]
type(Noisedata)
Noisedata
plot(Noisedata[1,], Noisedata[2,],col = "blue",type = "l",lwd = 2)
plot(Noisedata[1,], Noisedata[2,],col = "blue",lwd = 2)
plot(Noisedata[1,], Noisedata[2,],col = "blue",lwd = 2)
plot(Noisedata[1,], Noisedata[2,],col = "blue",type = "l",lwd = 2)
plot(c(0:3),rep(4,4))
as.vector(Noisedata[1,])
plot(Noisedata[1,],Noisedata[1,])
par(mfrow = c(1,2))
plot(Noisedata[1,], Noisedata[2,],col = "blue",type = "l",lwd = 2)
plot(Noisedata[1,], Noisedata[2,],col = "blue",lwd = 2)
par(mfrow = c(1,2))
plot(Noisedata[1,], Noisedata[2,],col = "blue",lwd = 2)
par(mfrow = c(1,2))
write.csv(RealData, file = "RealData.csv",row.names=FALSE, na="")
Realdata <- read.table("C:/Users/Thor/Dropbox/DTU/Stokastiske differentialligninger/RealData.csv",sep=",",header = T)
Noisedata <- read.table("C:/Users/Thor/Dropbox/DTU/Stokastiske differentialligninger/NoiseData.csv",sep=",",header = T)
par(mfrow = c(1,2))
plot(Noisedata[1,], Noisedata[2,],col = "blue",lwd = 2)
plot(Noisedata[1,], Noisedata[2,],col = "blue",lwd = 2)
plot(Noisedata[1,], Noisedata[2,],col = "blue",lwd = 2)
plot(Noisedata[1,], Noisedata[2,],col = "blue",lwd = 2)
par(mfrow = c(1,1))
plot(Noisedata[1,], Noisedata[2,],col = "blue",lwd = 2)
lines(Noisedata[1,], Realdata[2,],col = "red",lwd = 2)
plot()
